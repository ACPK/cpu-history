CPU Mon:
- memory leak: vm_deallocate the processorInfo array after use:
 		if(lastProcessorInfo) {
			size_t lastProcessorInfoSize = sizeof(integer_t) * numLastProcessorInfo;
			vm_deallocate(target_task, (vm_address_t)lastProcessorInfo, lastProcessorInfoSize);
		}

		lastProcessorInfo = processorInfo;
		numLastProcessorInfo = numProcessorInfo;

- switch the source of the graph from memory info to CPU info:
	- first test data coming out of cpu info with logs (this might hurt. limit to one sample every 2 sec)
	- test with xcode debugger to watch array data change.
	- then change graphing fct to pull from different data source
- remove extraneous information for memory monitor:
	- paging rate graph
	- text overlay
	- preferences form
- future upgrades:
	- CPU usage across processors:
		- get # of processors with http://www.cocoadev.com/index.pl?NSProcessInfo
		- add another graph or average across both cores?\






- methods needed:
	- updateCPUStat: what do we want to accomplish here?
		- get current data @done
		- retrieve data at last refresh @done
		- subtract last from current @done
	- init: init the processor usage data: set the first "lastProcessorInfo" array so update is all good to go.
	- getCurrentData
		- return last data
	- getNext:
		- run update
		- set ptr new data
		- update internal ptrs
		- 
	- getPrev
		- return one before last?
- variables needed:
	- CPUData array
	- lastProcessorInfo (for diffs)
	- numLastProcessorInfo (to deallocate it)
	- two variables to track size, location in array
- notes: need TWO refreshes at init to get current info!
Archive:
- get it to build @done @project(CPU Mon)
- make another pass through the source to take out extraneous references to CPUUsage @done @project(CPU Mon)
- check TODOs @done @project(CPU Mon)
- how to do data update: make a large float array with my usage data in it, use a rolling pointer to update things. store new data from current cpu stats. @done @project(CPU Mon)
	- is that how the current and last stuff is built? @done @project(CPU Mon)
- in other words, I need to pass the pointer by reference so I can modify its value (ie the memory it points to). keep in mind, someone has to clean up after the old memory. @done @project(CPU Mon)
